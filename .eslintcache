[{"D:\\web projects\\react-app\\src\\index.js":"1","D:\\web projects\\react-app\\src\\App.js":"2","D:\\web projects\\react-app\\src\\reportWebVitals.js":"3","D:\\web projects\\react-app\\src\\components\\navbar.jsx":"4","D:\\web projects\\react-app\\src\\components\\counter\\counter.jsx":"5","D:\\web projects\\react-app\\src\\components\\counter\\Counter.jsx":"6","D:\\web projects\\react-app\\src\\components\\Counters\\counters.jsx":"7"},{"size":546,"mtime":1609012058937,"results":"8","hashOfConfig":"9"},{"size":1528,"mtime":1609989252666,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":437,"mtime":1609017044139,"results":"12","hashOfConfig":"9"},{"size":1576,"mtime":1609988422120,"results":"13","hashOfConfig":"9"},{"size":1576,"mtime":1609988422120,"results":"14","hashOfConfig":"9"},{"size":647,"mtime":1609989251179,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1p0ox0a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web projects\\react-app\\src\\index.js",[],["33","34"],"D:\\web projects\\react-app\\src\\App.js",[],"D:\\web projects\\react-app\\src\\reportWebVitals.js",[],"D:\\web projects\\react-app\\src\\components\\navbar.jsx",["35"],"import React, { Component } from 'react';   \r\n\r\nclass Navbar extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n        <nav className=\"navbar navbar-light bg-light\"> \r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">Navbar <span className=\"badge badge-pill badge-secondary\"> {this.props.totalCounters}</span></a>\r\n        </div>\r\n      </nav> );\r\n    }\r\n}\r\n \r\nexport default Navbar;","D:\\web projects\\react-app\\src\\components\\counter\\counter.jsx",["36","37"],"D:\\web projects\\react-app\\src\\components\\counter\\Counter.jsx",["38","39"],"import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    // state = { \r\n    //     value : this.props.counter.value\r\n    //     // tags: ['tag1', 'tag2', 'tag3']\r\n    //  }\r\n\r\n     constructor (props){\r\n         super(props);\r\n        //  this.handleIncrement = this.handleIncrement.bind(this);\r\n        //  console.log(this);\r\n     }\r\n    \r\n    render() { \r\n        console.log(\"this\" + this.props.counter);\r\n        return <div>\r\n            {this.props.children}\r\n            \r\n            <span  className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button onClick={() => this.props.onIncrement(this.props.counter)} className=\"btn btn-secondary btn-sm m-2\">Increment</button>\r\n        <button className=\"btn-danger m-2\" onClick={() => this.props.onDelete(this.props.counter.id)}>Delete</button>\r\n        \r\n        <button onClick={() => this.props.onDecrement(this.props.counter)} className=\"btn btn-secondary btn-sm m-2\">Decrement</button>\r\n        {/* <button onClick={(e) => { this.setCounter(e)}} className=\"btn btn-secondary btn-sm m-2\">Set counter</button> */}\r\n        {/* <ul>\r\n            {this.state.tags.map(tag =>  <li key={tag}>{tag}</li>)}\r\n        </ul> */}\r\n        </div>\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.props.counter.value === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount (){\r\n        const {value} = this.props.counter;\r\n        return value == 0 ? \"Zero\" : value;\r\n    }\r\n}\r\n \r\nexport default Counter;","D:\\web projects\\react-app\\src\\components\\Counters\\counters.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":9,"column":11,"nodeType":"46","endLine":9,"endColumn":48},{"ruleId":"47","severity":1,"message":"48","line":9,"column":6,"nodeType":"49","messageId":"50","endLine":13,"endColumn":7},{"ruleId":"51","severity":1,"message":"52","line":40,"column":22,"nodeType":"53","messageId":"54","endLine":40,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":9,"column":6,"nodeType":"49","messageId":"50","endLine":13,"endColumn":7},{"ruleId":"51","severity":1,"message":"52","line":40,"column":22,"nodeType":"53","messageId":"54","endLine":40,"endColumn":24},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]